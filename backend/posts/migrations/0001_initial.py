# Generated by Django 4.2 on 2025-08-10 12:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import posts.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=250)),
                ('description', models.TextField(max_length=1000)),
                ('post_type', models.CharField(choices=[('JOB', 'Job Posting'), ('GENERAL', 'General Post'), ('ANNOUNCEMENT', 'Announcement')], default='GENERAL', max_length=20)),
                ('priority', models.CharField(choices=[('LOW', 'Low Priority'), ('MEDIUM', 'Medium Priority'), ('HIGH', 'High Priority'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=10)),
                ('location', models.CharField(blank=True, max_length=550)),
                ('image', models.ImageField(blank=True, null=True, upload_to=posts.models.post_image_upload_path)),
                ('salary_range', models.CharField(blank=True, max_length=100)),
                ('requirements', models.TextField(blank=True, max_length=500)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Poke',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('poke', models.BooleanField(default=False)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pokes', to='posts.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_pokes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Poke',
                'verbose_name_plural': 'Pokes',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('like', models.BooleanField(default=False)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='posts.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField(max_length=500)),
                ('is_edited', models.BooleanField(default=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='posts.comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='posts.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['post_type', 'is_active'], name='posts_post_post_ty_1246b5_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['created_at'], name='posts_post_created_dadbfe_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['user', 'is_active'], name='posts_post_user_id_39dedb_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['priority', 'expires_at'], name='posts_post_priorit_21cfdd_idx'),
        ),
        migrations.AddIndex(
            model_name='poke',
            index=models.Index(fields=['user', 'post'], name='posts_poke_user_id_719a8e_idx'),
        ),
        migrations.AddIndex(
            model_name='poke',
            index=models.Index(fields=['post', 'poke'], name='posts_poke_post_id_05991c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='poke',
            unique_together={('user', 'post')},
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['user', 'post'], name='posts_like_user_id_88178d_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['post', 'like'], name='posts_like_post_id_b0e48a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='like',
            unique_together={('user', 'post')},
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['post', 'created_at'], name='posts_comme_post_id_94ac6b_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['user', 'created_at'], name='posts_comme_user_id_c1d8b0_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['parent'], name='posts_comme_parent__6e2946_idx'),
        ),
    ]
